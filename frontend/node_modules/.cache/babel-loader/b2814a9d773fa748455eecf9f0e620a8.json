{"ast":null,"code":"var _jsxFileName = \"/Users/Webster/Documents/Job Applications/technical_tests/ArcticWolf/my-app/src/components/HomePage.tsx\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport Checker from './Checker';\nimport TopSearched from './TopSearched';\nconst URL = \"http://localhost:5000/anagram\";\n\nconst HomePage = () => {\n  const [isLoading, setLoading] = useState(false);\n  const [isSubmitted, setSubmitted] = useState(false);\n  const [isAnagram, setAnagram] = useState(false);\n  const [anagramList, setAnagramList] = useState([]);\n\n  const onSubmit = data => {\n    setLoading(true);\n    var bodyFormData = new FormData();\n    bodyFormData.append(\"word1\", data.word1);\n    bodyFormData.append(\"word2\", data.word2);\n    axios.post(URL, bodyFormData, {\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      }\n    }).then(response => {\n      setAnagram(response.data.isAnagram);\n      setLoading(false);\n      setSubmitted(true);\n      getData();\n    });\n  };\n\n  const getData = async () => {\n    const response = await axios.get(URL);\n    setAnagramList(response.data);\n  };\n\n  const formProp = {\n    isLoading: isLoading,\n    isSubmitted: isSubmitted,\n    isAnagram: isAnagram,\n    onSubmit: onSubmit\n  };\n  const topSearchedProp = {\n    anagramList: anagramList\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Checker, Object.assign({}, formProp, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TopSearched, Object.assign({}, topSearchedProp, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  })));\n};\n\nexport default HomePage;","map":{"version":3,"sources":["/Users/Webster/Documents/Job Applications/technical_tests/ArcticWolf/my-app/src/components/HomePage.tsx"],"names":["React","useState","axios","Checker","TopSearched","URL","HomePage","isLoading","setLoading","isSubmitted","setSubmitted","isAnagram","setAnagram","anagramList","setAnagramList","onSubmit","data","bodyFormData","FormData","append","word1","word2","post","headers","then","response","getData","get","formProp","topSearchedProp"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,MAAMC,GAAG,GAAG,+BAAZ;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACnB,QAAM,CAACC,SAAD,EAAYC,UAAZ,IAA0BP,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACQ,WAAD,EAAcC,YAAd,IAA8BT,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACU,SAAD,EAAYC,UAAZ,IAA0BX,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACY,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAe,EAAf,CAA9C;;AAEA,QAAMc,QAAQ,GAAIC,IAAD,IAAqB;AAClCR,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,QAAIS,YAAY,GAAG,IAAIC,QAAJ,EAAnB;AACAD,IAAAA,YAAY,CAACE,MAAb,CAAoB,OAApB,EAA6BH,IAAI,CAACI,KAAlC;AACAH,IAAAA,YAAY,CAACE,MAAb,CAAoB,OAApB,EAA6BH,IAAI,CAACK,KAAlC;AACAnB,IAAAA,KAAK,CAACoB,IAAN,CAAWjB,GAAX,EAAgBY,YAAhB,EAA8B;AAACM,MAAAA,OAAO,EAAE;AACpC,wBAAgB;AADoB;AAAV,KAA9B,EAGCC,IAHD,CAGMC,QAAQ,IAAI;AACdb,MAAAA,UAAU,CAACa,QAAQ,CAACT,IAAT,CAAcL,SAAf,CAAV;AACAH,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACAgB,MAAAA,OAAO;AACV,KARD;AASD,GAdH;;AAgBE,QAAMA,OAAO,GAAG,YAAY;AAC1B,UAAMD,QAAQ,GAAG,MAAMvB,KAAK,CAACyB,GAAN,CAAUtB,GAAV,CAAvB;AACAS,IAAAA,cAAc,CAACW,QAAQ,CAACT,IAAV,CAAd;AACH,GAHC;;AAKF,QAAMY,QAAQ,GAAG;AACbrB,IAAAA,SAAS,EAAEA,SADE;AAEbE,IAAAA,WAAW,EAAEA,WAFA;AAGbE,IAAAA,SAAS,EAAEA,SAHE;AAIbI,IAAAA,QAAQ,EAAEA;AAJG,GAAjB;AAOA,QAAMc,eAAe,GAAG;AACpBhB,IAAAA,WAAW,EAAEA;AADO,GAAxB;AAIA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD,oBAAae,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI,oBAAC,WAAD,oBAAiBC,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAHJ,CADJ;AAQH,CA9CD;;AAgDA,eAAevB,QAAf","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios'\n\nimport {IFormPair, ITablePair} from '../types/interfaces'\nimport Checker from './Checker'\nimport TopSearched from './TopSearched'\n\nconst URL = \"http://localhost:5000/anagram\"\n\nconst HomePage = () => {\n    const [isLoading, setLoading] = useState(false);\n    const [isSubmitted, setSubmitted] = useState(false);\n    const [isAnagram, setAnagram] = useState(false);\n    const [anagramList, setAnagramList] = useState<ITablePair[]>([]);\n    \n    const onSubmit = (data: IFormPair) => {\n        setLoading(true)\n        var bodyFormData = new FormData();\n        bodyFormData.append(\"word1\", data.word1);\n        bodyFormData.append(\"word2\", data.word2);\n        axios.post(URL, bodyFormData, {headers: {\n            'Content-Type': 'application/x-www-form-urlencoded'\n          }})\n        .then(response => {\n            setAnagram(response.data.isAnagram);\n            setLoading(false);\n            setSubmitted(true);\n            getData()\n        });\n      };\n\n      const getData = async () => {\n        const response = await axios.get(URL);\n        setAnagramList(response.data);\n    }\n\n    const formProp = {\n        isLoading: isLoading,\n        isSubmitted: isSubmitted,\n        isAnagram: isAnagram,\n        onSubmit: onSubmit,\n    }\n\n    const topSearchedProp = {\n        anagramList: anagramList\n    }\n\n    return (\n        <div>\n            <Checker {...formProp}></Checker>\n            <br></br>\n            <TopSearched {...topSearchedProp}></TopSearched>\n        </div>\n        \n    );\n}\n\nexport default HomePage;"]},"metadata":{},"sourceType":"module"}