{"ast":null,"code":"var _jsxFileName = \"/Users/Webster/Documents/Job Applications/technical_tests/ArcticWolf/my-app/src/components/Checker.tsx\";\nimport React from 'react';\nimport { useForm } from \"react-hook-form\";\nimport Card from 'react-bootstrap/Card';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport \"./Checker.css\";\n\nconst Checker = prop => {\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"text-center card-padding\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit(prop.onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"formGridText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 25\n    }\n  }, \"Word 1\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    name: \"word1\",\n    ref: register({\n      required: true\n    }),\n    placeholder: \"wolf\",\n    disabled: prop.isLoading,\n    \"data-testid\": \"formInput1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 25\n    }\n  }), errors.word1 && errors.word1.type === \"required\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 25\n    }\n  }, \"Your must enter a word.\")), /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"formGridText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 25\n    }\n  }, \"Word 2\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    name: \"word2\",\n    ref: register({\n      required: true\n    }),\n    placeholder: \"flow\",\n    disabled: prop.isLoading,\n    \"data-testid\": \"formInput2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 25\n    }\n  }), errors.word2 && errors.word2.type === \"required\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 25\n    }\n  }, \"Your must enter a word.\"))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"submit-center\",\n    variant: \"primary\",\n    type: \"submit\",\n    disabled: prop.isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }, prop.isLoading ? 'Loadingâ€¦' : 'Submit')), prop.isSubmitted && prop.isAnagram && !prop.isLoading && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Yes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }\n  }, \"YES\"), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 25\n    }\n  }, \"Word1 and Word2 are anagrams\")), prop.isSubmitted && !prop.isAnagram && !prop.isLoading && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"No\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 25\n    }\n  }, \"NO\"), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 25\n    }\n  }, \"Word1 and Word2 are not anagrams\"))))));\n};\n\nexport default Checker;","map":{"version":3,"sources":["/Users/Webster/Documents/Job Applications/technical_tests/ArcticWolf/my-app/src/components/Checker.tsx"],"names":["React","useForm","Card","Form","Row","Col","Button","Checker","prop","register","handleSubmit","errors","onSubmit","required","isLoading","word1","type","word2","isSubmitted","isAnagram"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useForm } from \"react-hook-form\";\n\nimport Card from 'react-bootstrap/Card'\nimport Form from 'react-bootstrap/Form'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Button from 'react-bootstrap/Button'\n\nimport \"./Checker.css\"\nimport {IFormPair, IFormProp} from '../types/interfaces'\n\nconst Checker = (prop: IFormProp) => {\n\n    const { register, handleSubmit, errors } = useForm<IFormPair>();\n\n    return (\n        <div>\n        <Card className='text-center card-padding'>\n          <Card.Body>\n            <Form onSubmit={handleSubmit(prop.onSubmit)}>\n                <Row>\n                    <Form.Group as={Col} controlId=\"formGridText\">\n                        <Form.Label>Word 1</Form.Label>\n                        <Form.Control \n                        type=\"text\" \n                        name=\"word1\" \n                        ref={register({required: true})} \n                        placeholder=\"wolf\" \n                        disabled={prop.isLoading}\n                        data-testid=\"formInput1\"/>\n\n                        {errors.word1 && errors.word1.type === \"required\" && (\n                        <div className=\"error\">Your must enter a word.</div>\n                        )}\n\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"formGridText\">\n                        <Form.Label>Word 2</Form.Label>\n                        <Form.Control \n                        type=\"text\" \n                        name=\"word2\" \n                        ref={register({required: true})} \n                        placeholder=\"flow\" \n                        disabled={prop.isLoading}\n                        data-testid=\"formInput2\"/>\n\n                        {errors.word2 && errors.word2.type === \"required\" && (\n                        <div className=\"error\">Your must enter a word.</div>\n                        )}\n\n                    </Form.Group>\n                </Row>\n\n                <Row>\n                    <Button \n                    className=\"submit-center\" \n                    variant=\"primary\" \n                    type=\"submit\" \n                    disabled={prop.isLoading} \n                    >\n                         {prop.isLoading ? 'Loadingâ€¦' : 'Submit'}\n                    </Button>\n                </Row>\n\n                {prop.isSubmitted && prop.isAnagram && !prop.isLoading && \n                    <div className=\"Yes\">\n                        <h1>YES</h1>\n                        <h5>Word1 and Word2 are anagrams</h5>\n                    </div>\n                }\n                \n                {prop.isSubmitted && !prop.isAnagram && !prop.isLoading && \n                    <div className=\"No\">\n                        <h1>NO</h1>\n                        <h5>Word1 and Word2 are not anagrams</h5>\n                    </div>\n                }\n\n            </Form>\n          </Card.Body>\n        </Card>\n      </div>);\n}\n\nexport default Checker"]},"metadata":{},"sourceType":"module"}